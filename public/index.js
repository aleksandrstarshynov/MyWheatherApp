// import block

// processing history data logic
const currentData = new Date().toISOString().split('T')[0]; // –§–æ—Ä–º–∞—Ç YYYY-MM-DD

import { changeDayFlag, changeDayDatum } from '../Model/changeDayFlag.js';

if (!changeDayFlag && currentData !== changeDayDatum) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏—è
    console.log(`–ü—Ä–æ–≤–µ—Ä–∫–∞: ${currentData}`);
    console.log(`–ü—Ä–æ–≤–µ—Ä–∫–∞: ${changeDayFlag}`);
    console.log(`–ü—Ä–æ–≤–µ—Ä–∫–∞: ${changeDayDatum}`);

    async function updateData(currentData) {
        try {
            console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä...');
            console.log('üìù –î–∞–Ω–Ω—ã–µ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã–µ –≤ fetch:', currentData);
    
            const response = await fetch('http://localhost:3000/update-flag', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ currentData })
            });
    
            if (!response.ok) {
                // –°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, 500)
                const errorText = await response.text(); // –ß–∏—Ç–∞–µ–º –æ—Ç–≤–µ—Ç –∫–∞–∫ —Ç–µ–∫—Å—Ç
                throw new Error(`–°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É: ${response.status} - ${errorText}`);
            }
    
            const responseData = await response.json(); // –¢–µ–ø–µ—Ä—å —Ç–æ—á–Ω–æ JSON
            console.log('‚úÖ –°–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—Ç–∏–ª:', responseData);
            return responseData;
    
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞:', error);
        }
    }
    
    updateData(currentData); // –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏!
}



// Update data via fetch
// getDataDaily();                       //TODO

// Process previous day's data
// dataProcessing();                     //TODO

// Calculate occuracy
// inacuracyCalculation();              //TODO

// Render UI

// Render chart 
//chart()                              //TODO







// // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤–æ–∑—Ä–∞—Å—Ç–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞
// async function getAge() {
//     try {
//         const response = await fetch('http://localhost:3000/update-data', {
//             method: 'GET'
//         });
//         const responseData = await response.json();  
//         console.log(responseData); 
//         return responseData.age;  
//     } catch (error) {
//         console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤–æ–∑–≤—Ä–∞—Å—Ç–∞ –ø–µ—Ä–≤—ã–π —Ä–∞–∑:', error);
//     }
// }


// // async function getNewAge() {
// //     try {
// //         const response = await fetch('http://localhost:3000/get-data', {
// //             method: 'GET'
// //         });
// //         const responseData = await response.json();  // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ—Ç–≤–µ—Ç –≤ JSON
// //         return responseData.age;  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤–æ–∑—Ä–∞—Å—Ç
// //     } catch (error) {
// //         console.error('–û—à–∏–±–∫–∞:', error);
// //     }
// // }

// // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
// async function updateData(newData) {
//     try {
//         const response = await fetch('http://localhost:3000/update-data', {
//             method: 'POST',
//             headers: { 'Content-Type': 'application/json' },
//             body: JSON.stringify({ newData })
//         });
//         const responseData = await response.json();
//         return responseData;
//     } catch (error) {
//         console.error('–û—à–∏–±–∫–∞:', error);
//     }
// }

// // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
// function displayAge(age, isUpdated = false) {

//     const p = document.createElement('p');
//     p.textContent = isUpdated ? `Updated age from server: ${age}` : `Age from server: ${age}`;
//     document.body.appendChild(p);
// }

// // –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
// async function renderPageHome() {
//     // –ü–æ–ª—É—á–∞–µ–º –≤–æ–∑—Ä–∞—Å—Ç —Å —Å–µ—Ä–≤–µ—Ä–∞
//     const age = await getAge();  // –î–æ–∂–∏–¥–∞–µ–º—Å—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
//     // console.log(age);  // –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é age

//     // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
//     displayAge(age);  // –í—ã–≤–æ–¥–∏–º –Ω–∞—á–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç

//     // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ, –¥–æ–±–∞–≤–ª—è–µ–º 100 –∫ –≤–æ–∑—Ä–∞—Å—Ç—É
//     let newData = age + 100;
//     console.log(newData);


//      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä 
//      const updatedData = await updateData(newData);
//      console.log(updatedData);

//      // –ü–æ–ª—É—á–∞–µ–º –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç
//      //const updatedAge = await getAge();  // –î–æ–∂–∏–¥–∞–µ–º—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
//      //displayAge(age, true);  // –í—ã–≤–æ–¥–∏–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç
// }

// renderPageHome()
