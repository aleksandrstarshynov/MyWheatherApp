import express from 'express';
import cors from 'cors';
import path from 'path';
import { fileURLToPath } from 'url';
// import { updateDataFile } from './fileUtils.js';
// import { data } from './public/data.js';
import { dayFlagUpdate } from './Controller/dayFlagUpdate.js';

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é (—Ç–∞–∫ –∫–∞–∫ ES-–º–æ–¥—É–ª–∏ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç __dirname)
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
const app = express();
app.use(cors());
// Middleware –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å JSON
app.use(express.json());
// –û—Ç–¥–∞—ë–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã –∏–∑ –ø–∞–ø–∫–∏ public
app.use(express.static(path.join(__dirname, 'public')));

//   test endpoints
app.get('/test', (req, res) => {
    res.json({ message: 'Server is working!' });
});
app.post('/test-post', (req, res) => {
    console.log('–ü–æ–ª—É—á–µ–Ω POST-–∑–∞–ø—Ä–æ—Å:', req.body); // –í—ã–≤–æ–¥–∏–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∑–∞–ø—Ä–æ—Å–∞
    res.json({ message: 'Data received!' });
});







// POST request fir Day Flag update
app.post('/update-flag', async (req, res) => {
    console.log('üöÄ –ü–æ–ª—É—á–µ–Ω POST-–∑–∞–ø—Ä–æ—Å –Ω–∞ /update-flag');
    console.log('üìù –ü–æ–ª–Ω—ã–π body –∑–∞–ø—Ä–æ—Å–∞:', req.body);

    const newData = req.body.currentData;
    
    if (!newData) {
        console.error('‚ùå –û—à–∏–±–∫–∞: newData –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!');
        return res.status(400).json({ error: 'newData is required' });
    }
    
    console.log('‚úÖ newData –ø–æ–ª—É—á–µ–Ω:', newData);
    
    try {
        await dayFlagUpdate(newData);
        console.log('üéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.');
        res.json({ message: `–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã —Å –Ω–æ–≤—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º: ${newData}` });
    } catch (err) {
        console.error('üî• –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ newData:', err.message, err.stack);  // –õ–æ–≥ –æ—à–∏–±–∫–∏
        res.status(500).send(`–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è newData: ${err.message}`);
    }
});




app.listen(3000, () => console.log('–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3000'));